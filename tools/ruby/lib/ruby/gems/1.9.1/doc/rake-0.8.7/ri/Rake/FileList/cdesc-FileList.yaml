--- !ruby/object:RDoc::RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: "[]"
- !ruby/object:RDoc::RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: A FileList is essentially an array with a few helper methods defined to make file manipulation a bit easier.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: FileLists are lazy. When given a list of glob patterns for possible files to be included in the file list, instead of searching the file structures to find the files, a FileList holds the pattern for latter use.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: This allows us to define a number of FileList to match any number of files, but only search out the actual files when then FileList itself is actually used. The key is that the first time an element of the FileList/Array is requested, the pending patterns are resolved into a real list of file names.
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: List of array methods (that are not in <tt>Object</tt>) that need to be delegated.
  name: ARRAY_METHODS
  value: (Array.instance_methods - Object.instance_methods).map { |n| n.to_s }
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: List of additional methods that must be delegated.
  name: MUST_DEFINE
  value: "%w[to_a inspect]"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: List of methods that should not be delegated here (we define special versions of them explicitly below).
  name: MUST_NOT_DEFINE
  value: "%w[to_a to_ary partition *]"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: List of delegated methods that return new array values which need wrapping.
  name: SPECIAL_RETURN
  value: "%w[       map collect sort sort_by select find_all reject grep       compact flatten uniq values_at       + - & |     ]"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  name: DELEGATING_METHODS
  value: (ARRAY_METHODS + MUST_DEFINE - MUST_NOT_DEFINE).collect{ |s| s.to_s }.sort.uniq
- !ruby/object:RDoc::RI::Constant 
  comment: 
  name: DEFAULT_IGNORE_PATTERNS
  value: "[       /(^|[\\/\\\\])CVS([\\/\\\\]|$)/,       /(^|[\\/\\\\])\\.svn([\\/\\\\]|$)/,       /\\.bak$/,       /~$/     ]"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  name: DEFAULT_IGNORE_PROCS
  value: "[       proc { |fn| fn =~ /(^|[\\/\\\\])core$/ && ! File.directory?(fn) }"
full_name: Rake::FileList
includes: 
- !ruby/object:RDoc::RI::IncludedModule 
  name: Cloneable
instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: "*"
- !ruby/object:RDoc::RI::MethodSummary 
  name: ==
- !ruby/object:RDoc::RI::MethodSummary 
  name: add
- !ruby/object:RDoc::RI::MethodSummary 
  name: calculate_exclude_regexp
- !ruby/object:RDoc::RI::MethodSummary 
  name: clear_exclude
- !ruby/object:RDoc::RI::MethodSummary 
  name: egrep
- !ruby/object:RDoc::RI::MethodSummary 
  name: exclude
- !ruby/object:RDoc::RI::MethodSummary 
  name: exclude?
- !ruby/object:RDoc::RI::MethodSummary 
  name: existing
- !ruby/object:RDoc::RI::MethodSummary 
  name: existing!
- !ruby/object:RDoc::RI::MethodSummary 
  name: ext
- !ruby/object:RDoc::RI::MethodSummary 
  name: gsub
- !ruby/object:RDoc::RI::MethodSummary 
  name: gsub!
- !ruby/object:RDoc::RI::MethodSummary 
  name: import
- !ruby/object:RDoc::RI::MethodSummary 
  name: include
- !ruby/object:RDoc::RI::MethodSummary 
  name: is_a?
- !ruby/object:RDoc::RI::MethodSummary 
  name: kind_of?
- !ruby/object:RDoc::RI::MethodSummary 
  name: pathmap
- !ruby/object:RDoc::RI::MethodSummary 
  name: resolve
- !ruby/object:RDoc::RI::MethodSummary 
  name: sub
- !ruby/object:RDoc::RI::MethodSummary 
  name: sub!
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_a
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_ary
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_s
name: FileList
superclass: Object
